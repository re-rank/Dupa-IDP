name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm run install:all
    
    - name: Run linting
      run: npm run lint
    
    - name: Run backend tests
      run: cd backend && npm test
      env:
        NODE_OPTIONS: --max-old-space-size=1024
    
    - name: Run frontend tests
      run: cd frontend && npm test
      env:
        CI: true
    
    - name: Build project
      run: npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm run install:all
    
    - name: Run security audit
      run: |
        npm audit --audit-level high || true
        cd backend && npm audit --audit-level high || true
        cd ../frontend && npm audit --audit-level high || true

  docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker images
      run: |
        docker build -t project-atlas-backend ./backend
        docker build -t project-atlas-frontend ./frontend
    
    - name: Test Docker Compose
      run: |
        docker-compose up -d
        sleep 30
        curl -f http://localhost:3001/api/health || exit 1
        curl -f http://localhost:5173 || exit 1
        docker-compose down